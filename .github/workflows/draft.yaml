name: Draft release

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  CARGO_TERM_COLOR: always

jobs:
  draft:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - uses: ./.github/actions/gitlog
      name: Get changed commits
      id: gitlog
      with:
        output-file: ./draft-gitlog.md

    - name: Prepare changes
      run: |
        echo "# Changes in this Release" > ./draft-changes.md
        cat < ./draft-gitlog.md >> ./draft-changes.md

        cat ./draft-changes.md

    - name: Get release info
      id: release_info
      run: |
        version=$(cargo read-manifest | jq -r .version)

        prerelease=false
        if [[ "$version" =~ .*-.* ]]; then
          prerelease=true
        fi
        echo "::set-output name=is_prerelease::$prerelease"
        echo "::set-output name=version::$version"

    - name: Remove previous release
      run: |
        echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token
        gh release delete ${{ steps.release_info.outputs.version }} -y || true

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.release_info.outputs.version }}
        release_name: Release ${{ steps.release_info.outputs.version }}
        body_path: ./draft-changes.md
        draft: true
        prerelease: ${{ steps.release_info.outputs.is_prerelease }}
